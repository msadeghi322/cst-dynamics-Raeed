---
title: Submovement decomposition of CST and RTT
author: Raeed Chowdhury
date: 2022-09-29
format:
  html:
    toc: true
    toc-location: left
    cap-location: margin
    code-fold: true
    execute: true
    self-contained: false
jupyter: python3
---

```{python}
import src
import pyaldata
import pandas as pd
import numpy as np
import yaml

from sklearn.decomposition import PCA

from ipywidgets import interact
import matplotlib.pyplot as plt
import seaborn as sns

sns.set_context('paper')

%load_ext autoreload
%autoreload 2

with open('../params.yaml','r') as f:
    params = yaml.safe_load(f)
    decomp_params = params['submovement_decomposition']

filename = '../data/trial_data/Prez_20220720_RTTCSTCO_TD.mat'
td = (
    pyaldata.mat2dataframe(
        filename,
        shift_idx_fields=True,
        td_name='trial_data'
    )
    .assign(
        date_time=lambda x: pd.to_datetime(x['date_time']),
        session_date=lambda x: pd.DatetimeIndex(x['date_time']).normalize()
    )
    .query('task=="RTT" | task=="CST"')
    .pipe(src.data.remove_aborts, verbose=decomp_params['verbose'])
    .pipe(src.data.remove_artifact_trials, verbose=decomp_params['verbose'])
    .pipe(
        src.data.filter_unit_guides,
        filter_func=lambda guide: guide[:,1] > (0 if decomp_params['keep_unsorted'] else 1)
    )
    .pipe(src.data.remove_correlated_units)
    .pipe(
        src.data.remove_all_low_firing_neurons,
        threshold=0.1,
        divide_by_bin_size=True,
        verbose=decomp_params['verbose']
    )
    .pipe(pyaldata.add_firing_rates,method='smooth', std=0.05, backend='convolve')
    .pipe(src.data.trim_nans, ref_signals=['rel_hand_pos'])
    .pipe(src.data.fill_kinematic_signals)
    .pipe(src.data.rebin_data,new_bin_size=decomp_params['bin_size'])
    .pipe(pyaldata.soft_normalize_signal,signals=['M1_rates','PMd_rates','MC_rates'])
    .pipe(pyaldata.dim_reduce,PCA(n_components=15),'M1_rates','M1_pca')
    .pipe(pyaldata.dim_reduce,PCA(n_components=15),'PMd_rates','PMd_pca')
    .pipe(pyaldata.dim_reduce,PCA(n_components=15),'MC_rates','MC_pca')
)
```

# Get the hand movement profile of a few random trials

```{python}
for _,trial in td.groupby('task').sample(n=2).iterrows():
    fig = plt.figure()
    src.submovements.plot_hold_move_speed(trial,fig=fig)
# src.submovements.plot_hold_move_speed(td.sample(n=1).squeeze())
```